test3$time = as.POSIXct(strptime(test3$time, '%Y-%m-%d %H:%M:%S'))
head(test3)
new_vector = test3$time[2:nrow(test3)]
new_vector = c(new_vector, as.POSIXct(strptime('1970-01-01 00:00:00', '%Y-%m-%d %H:%M:%S')))
test3 = cbind(test3, new_vector)
test3[1:168,]
test3$time_diff = as.numeric(difftime(test3$time, test3$new_vector))
test3[1:168,]
help(which)
which(test$time_diff > 1800)
which(test3$time_diff > 1800)
head(session_table)
head(tw_event_table)
set_session_info = function(df) {
for (i in 1:nrow(df)) {
j = i+1
if (j < nrow(df)) {
if (as.numeric(difftime(df[,'time'][i], df[,'time'][j]), units='secs') >= 1800) {
if (match(TRUE, is.na(df[,'session'])) == 1) {
df[,'session'][match(TRUE, is.na(df[,'session'])):i] = 1
df[,'session_time'][match(TRUE, is.na(df[,'session_time'])):i] = df[i,'time']
} else {
k = df[,'session'][match(TRUE, is.na(df[,'session']))-1] + 1
df[,'session'][match(TRUE, is.na(df[,'session'])):i] = k
df[,'session_time'][match(TRUE, is.na(df[,'session_time'])):i] = df[j,'time']
}
}
} else if (j == nrow(df)) {
if (match(TRUE, is.na(df[,'session'])) == 1) {
df[, 'session'][match(TRUE, is.na(df['session'])):j] = 1
df[,'session_time'][match(TRUE, is.na(df[,'session_time'])):j] = df[j,'time']
} else {
k = df[,'session'][match(TRUE, is.na(df[,'session']))-1] + 1
df[,'session'][match(TRUE, is.na(df[,'session'])):j] = k
df[,'session_time'][match(TRUE, is.na(df[,'session_time'])):j] = df[j,'time']
}
} else if (nrow(df) == 1) {
df[, 'session'][match(TRUE, is.na(df['session']))] = 1
df[,'session_time'][match(TRUE, is.na(df[,'session_time']))] = df[1,'time']
}
}
return(df)
}
completeFun = function(data, desiredCols) {
completeVec = complete.cases(data[, desiredCols])
return(data[completeVec, ])
}
session_table = tw_event_table
refined_table = completeFun(session_table, 'user_id')
refined_table$session = rep(NA, nrow(refined_table))
refined_table$session_time = rep(NA, nrow(refined_table))
system.time(
for (i in unique(refined_table$user_id)[!is.na(unique(refined_table$user_id))]) {
newdf = set_session_info(filter(refined_table, user_id == as.integer(i)))
refined_table[refined_table$user_id==as.integer(i), 'session'] = newdf[newdf$user_id==as.integer(i), 'session']
refined_table[refined_table$user_id==as.integer(i), 'session_time'] = newdf[newdf$user_id==as.integer(i), 'session_time']
}
)
# 전체 영상 데이터 불러오기
head(session_table)
refined_table = completeFun(session_table, 'user_id')
refined_table$session = rep(NA, nrow(refined_table))
refined_table$session_time = rep(NA, nrow(refined_table))
system.time(
for (i in unique(refined_table$user_id)[!is.na(unique(refined_table$user_id))]) {
newdf = set_session_info(filter(refined_table, user_id == as.integer(i)))
refined_table[refined_table$user_id==as.integer(i), 'session'] = newdf[newdf$user_id==as.integer(i), 'session']
refined_table[refined_table$user_id==as.integer(i), 'session_time'] = newdf[newdf$user_id==as.integer(i), 'session_time']
}
)
head(refined_table)
library(dplyr)
system.time(
for (i in unique(refined_table$user_id)[!is.na(unique(refined_table$user_id))]) {
newdf = set_session_info(filter(refined_table, user_id == as.integer(i)))
refined_table[refined_table$user_id==as.integer(i), 'session'] = newdf[newdf$user_id==as.integer(i), 'session']
refined_table[refined_table$user_id==as.integer(i), 'session_time'] = newdf[newdf$user_id==as.integer(i), 'session_time']
}
)
head(refined_table)
head(tw_event_table)
head(refined_table)
select(filter(refined_table, user_id == as.integer(9985)), session)
select(filter(test3, user_id == as.integer(9985)), session)
select(filter(test2, user_id == as.integer(9985)), session)
test3 = completeFun(session_table, 'user_id')
test3$session = rep(NA, nrow(test3))
test3$session_time = rep(NA, nrow(test3))
test3$time = as.POSIXct(strptime(test3$time, '%Y-%m-%d %H:%M:%S'))
select(filter(test3, user_id == as.integer(9985)), session)
select(filter(test3, user_id == as.integer(9985)), session) = 1
session_table = tw_event_table
library(dplyr)
compare_time = select(session_table, time, user_id)
session_table %>%
group_by(user_id)
help(row_number)
help(lag)
session_table = filter(tw_event_table, !is.na(user_id))
session_table$time = as.POSIXct(strptime(session_table$time, '%Y-%m-%d %H:%M:%S'))
session_table %>%
group_by(user_id) %>%
mutate(compare_time = time - lag(time, default = time[1]))
library(dplyr)
session_table %>%
group_by(user_id) %>%
mutate(compare_time = time - lag(time, default = time[1]))
session_table[1:167,] %>%
group_by(user_id) %>%
mutate(compare_time = time - lag(time, default = time[1]))
session_table[1:167,]
session_table[1:167,] %>%
group_by(user_id)
session_table[1:167,] %>%
group_by(user_id) %>%
mutate(compare_time = time)
lag(session_table$time)
lag(session_table$time, default = time[1])
mutate(compare_time = time - lag(time))
session_table[1:167,] %>%
group_by(user_id) %>%
mutate(compare_time = time - lag(time))
session_table[1:167,] %>%
group_by(user_id) %>%
mutate(compare_time = as.numeric(time - lag(time)))
session_table[1:167,] %>%
group_by(user_id) %>%
mutate(compare_time = as.numeric(time - lag(time, default=time[1])))
session_table[1:167,] %>%
group_by(user_id) %>%
mutate(compare_time = as.numeric(time - lag(time, default=time)))
session_table[1:167,] %>%
group_by(user_id) %>%
mutate(compare_time = as.numeric(lag(time) - time))
a = session_table %>%
group_by(user_id) %>%
mutate(compare_time = as.numeric(lag(time) - time))
a[1:200,]
a[167:200,]
a = session_table %>%
group_by(user_id) %>%
mutate(compare_time = as.numeric(lag(time, default = time[1]) - time))
class(session_table)
a = session_table %>%
group_by(user_id) %>%
mutate(compare_time = as.numeric(lag(time, default = do(data.frame(time[1])) - time))
a = session_table %>%
group_by(user_id) %>%
mutate(compare_time = as.numeric(lag(time, default = do(data.frame(time[1]))) - time))
a$compare_time[is.na(a$compare_time)] == 0
a$compare_time[is.na(a$compare_time)] = 0
a[167:200,]
a = session_table %>%
group_by(user_id) %>%
mutate(compare_time = as.numeric(lag(time]) - time))
a = session_table %>%
group_by(user_id) %>%
mutate(compare_time = as.numeric(lag(time) - time))
a = session_table %>%
group_by(user_id) %>%
mutate(compare_time = as.numeric(lag(time, default = time[1]) - time))
a = session_table %>%
group_by(user_id) %>%
mutate(compare_time = as.numeric(lag(time, default = first(time)) - time))
data_frame(x = rep(1:2, each = 3), y = 1:6) %>%
group_by(x) %>%
mutate(y_wrapped = lead(y, default = first(y)))
library(dplyr)
install.packages('dplyr')
a = session_table %>%
group_by(user_id) %>%
mutate(compare_time = as.numeric(lag(time, default = first(time)) - time))
require(dplyr)
a = session_table %>%
group_by(user_id) %>%
mutate(compare_time = as.numeric(lag(time, default = first(time)) - time))
sessionInfo()
a = session_table %>%
group_by(user_id) %>%
mutate(compare_time = as.numeric(lag(time, default = first(.$time)) - time))
a = session_table %>%
group_by(user_id) %>%
mutate(compare_time = as.numeric(lag(time, default = .$time[1]) - time))
a = session_table %>%
group_by(user_id) %>%
mutate(compare_time = as.numeric(lag(time, default = first(time)) - time))
a = session_table %>%
group_by(user_id) %>%
mutate(compare_time = as.numeric(lag(time) - time))
a[167:200,]
a = session_table %>%
group_by(user_id) %>%
mutate(compare_time = as.numeric(lag(time) - time)) %>%
filter(compare_time > 1800)
a[1:200,]
a[1:200, c('time', 'user_id', 'compare_time')]
a = session_table %>%
group_by(user_id) %>%
mutate(compare_time = as.numeric(lag(time) - time))
a[1:300, c('time', 'user_id', 'compare_time')]
a[1:200, c('time', 'user_id', 'compare_time')]
a[1:200, c('time', 'user_id', 'compare_time')]
options('max.print' = 1000)
a[1:200, c('time', 'user_id', 'compare_time')]
options(max.print = 1000)
a[1:200, c('time', 'user_id', 'compare_time')]
print(a[1:200, c('time', 'user_id', 'compare_time')])
print(a[1:200, c('time', 'user_id', 'compare_time')], digits = 1000)
a[150:200, c('time', 'user_id', 'compare_time')]
a = session_table %>%
group_by(user_id) %>%
mutate(compare_time = as.numeric(lag(time) - time))
a[150:200, c('time', 'user_id', 'compare_time')]
a[160:200, c('time', 'user_id', 'compare_time')]
a[160:200, c('time', 'user_id', 'compare_time')]
a = session_table %>%
group_by(user_id) %>%
mutate(compare_time = as.numeric(lag(time) - time)) %>%
summarise(index = nth(compare_time > 1800))
a = session_table %>%
group_by(user_id) %>%
mutate(compare_time = as.numeric(lag(time) - time)) %>%
mutate(index = nth(compare_time > 1800))
a = session_table %>%
group_by(user_id) %>%
mutate(compare_time = as.numeric(lag(time) - time)) %>%
mutate(over_index = nth(compare_time > 1800))
a = session_table %>%
group_by(user_id) %>%
mutate(compare_time = as.numeric(lag(time) - time)) %>%
mutate(over_index = row_number(compare_time > 1800))
head(a)
a = session_table %>%
group_by(user_id) %>%
mutate(compare_time = as.numeric(lag(time) - time)) %>%
print(which(.$compare_time > 1800))
a = session_table %>%
group_by(user_id) %>%
mutate(compare_time = as.numeric(lag(time) - time)) %>%
print(.$compare_time[2])
a = session_table %>%
group_by(user_id) %>%
mutate(compare_time = as.numeric(lag(time) - time))
which(a$compare_time > 1800)
a[75:85,]
b = filter(a, user_id == 9985)
which(b$compare_time > 1800)
nrow(b)
session_table$session = rep(NA, nrow(session_table))
session_table$session_time = rep(NA, nrow(sesion_table))
a = session_table %>%
group_by(user_id) %>%
mutate(compare_time = as.numeric(lag(time) - time))
b = filter(a, user_id == 9985)
b %>%
mutate(session = ifelse(compare_time<1800 & lead(compare_time) == NA, 1, 0))
b %>%
mutate(session = if(compare_time<1800 & lead(compare_time) == NA, 1, 0))
b %>%
mutate(session = ifelse(compare_time<1800 & lead(compare_time) == NA, 1, 0))
b
session_table = filter(tw_event_table, !is.na(user_id))
session_table$time = as.POSIXct(strptime(session_table$time, '%Y-%m-%d %H:%M:%S'))
a = session_table %>%
group_by(user_id) %>%
mutate(compare_time = as.numeric(lag(time) - time))
b = filter(a, user_id == 9985)
b %>%
b
b %>%
mutate(session = ifelse(compare_time<1800 & lead(compare_time) == NA, 1, 0))
lead(b$compare_time)
b %>%
mutate(session = ifelse(compare_time<1800 & lead(compare_time) == NA, 1, 2))
b
b %>%
mutate(session = ifelse(compare_time<1800 & lead(compare_time) == NA, 1, 2))
b %>%
mutate(session = ifelse(compare_time<1800 & lead(compare_time) == 0, 1, 2))
b$compare_time[is.na(b$compare_time)] = -1
b %>%
mutate(session = ifelse(compare_time<1800 & lead(compare_time) == -1, 1, 2))
b %>%
mutate(session = ifelse(compare_time<1800 & lead(compare_time, default=-1) == -1, 1, 2))
b %>%
mutate(session = ifelse(compare_time<1800 & lead(compare_time, default=1) == -1, 1, 2))
c = b %>%
mutate(session = ifelse(compare_time<1800 & lead(compare_time, default=1) == -1, 1, 2))
lead(c$compare_time)
length(lead(c$compare_time))
lag(c$compare_time)
c = b %>%
mutate(session = ifelse(compare_time<1800 & lag(compare_time, default=-1) == -1, 1, 2))
length(c(-1))
c = b %>%
mutate(session = ifelse(compare_time<1800 & lag(compare_time, default=c(-1)) == -1, 1, 2))
c = b %>%
mutate(session = ifelse(compare_time<1800 & lag(compare_time, default=compare_time[1]) == -1, 1, 2))
c = b %>%
mutate(session = ifelse(compare_time<1800 & lag(compare_time) == -1, 1, 2))
c
c = b %>%
mutate(session = ifelse(compare_time<1800 & lag(compare_time, default=first(compare_time)) == -1, 1, 2))
c
c = b %>%
mutate(session = ifelse(compare_time == -1, 1,
ifelse(compare_time<1800, lag(session), 2)))
c = b %>%
mutate(session = ifelse(compare_time == -1, 1,
ifelse(compare_time<1800, lag('session'), 2)))
c
c = b %>%
mutate(session = ifelse(row_number() == 1, 1,
ifelse(compare_time<1800, lag(session),
ifelse(compare_time>1800, lag(session)+1, 0))))
c
c = b %>%
arrange(desc(time)) %>%
mutate(session = ifelse(row_number() == 1, 1,
ifelse(compare_time<1800, lag(session),
ifelse(compare_time>1800, lag(session)+1, 0))))
c
c = mutate(session =
ifelse(compare_time<1800, lag(session),
ifelse(compare_time>1800, lag(session)+1, 0)))
c = mutate(c, session =
ifelse(compare_time<1800, lag(session),
ifelse(compare_time>1800, lag(session)+1, 0)))
class(c$compare_time)
class(c$session)
c = mutate(c, session =
ifelse(compare_time<1800, as.integer(lag(session)),
ifelse(compare_time>1800, as.integer(lag(session))+1, 0)))
c
b = filter(a, user_id == 9985)
c = b %>%
arrange(desc(time)) %>%
mutate(session = ifelse(row_number() == 1, 1, 0))
c = mutate(c, session =
ifelse(compare_time<1800, as.integer(lag(session)),
ifelse(compare_time>1800, as.integer(lag(session))+1, 0)))
c
c = b %>%
arrange(desc(time)) %>%
mutate(session = ifelse(row_number() == 1, 1, 0))
c
b$compare_time[is.na(b$compare_time)] == 0
b$compare_time[is.na(b$compare_time)] = 0
c = b %>%
arrange(desc(time)) %>%
mutate(session = ifelse(row_number() == 1, 1, 0))
c
c = mutate(c, session =
ifelse(compare_time<1800, as.integer(lag(session)),
ifelse(compare_time>1800, as.integer(lag(session))+1, 0)))
c
c = mutate(c, session =
ifelse(compare_time<1800, as.integer(lag(session, default = 1)),
ifelse(compare_time>1800, as.integer(lag(session))+1, 0)))
c
c = mutate(c, session =
ifelse(compare_time<1800, as.integer(lag(session, default = 1)),
ifelse(compare_time>1800, as.integer(lag(session, default = 1))+1, 0)))
c
b = filter(a, user_id %in% c(9985, 9984))
b
b$compare_time[is.na(b$compare_time)] = 0
b
b %>%
group_by(user_id) %>%
mutate(session = ifelse(row_number() == 1, 1,
ifelse(compare_time < 1800, 1, NA))) %>%
mutate(session = ifelse(compare_time >= 1800, lag(session) + 1, lag(session)))
b %>%
group_by(user_id) %>%
mutate(session = ifelse(row_number() == 1, 1,
ifelse(compare_time < 1800, 1, NA))) %>%
mutate(session = ifelse(compare_time >= 1800, lag(session, default = 1) + 1, lag(session, default = 1)))
b[160:170,]
b = b %>%
group_by(user_id) %>%
mutate(session = ifelse(row_number() == 1, 1,
ifelse(compare_time < 1800, 1, NA))) %>%
mutate(session = ifelse(compare_time >= 1800, lag(session, default = 1) + 1, lag(session, default = 1)))
b[160:170,]
which(a$compare_time > 1800)
b[75:85,]
b = b %>%
group_by(user_id) %>%
mutate(session = ifelse(row_number() == 1, 1,
ifelse(compare_time < 1800, 1, NA))) %>%
mutate(session = ifelse(compare_time >= 1800, lag(session) + 1, lag(session)))
b[75:85,]
b = b%>%
group_by(user_id) %>%
mutate(session = cumsum(compare == 1800) + 1L)
b = b%>%
group_by(user_id) %>%
mutate(session = cumsum(compare_time == 1800) + 1L)
b[75:85,]
b[1:10,]
b[160:170,]
b = filter(a, user_id %in% c(9985, 9984))
b$compare_time[is.na(b$compare_time)] = 0
b = b%>%
group_by(user_id) %>%
mutate(session = cumsum(compare_time == 1800) + 1L)
b[75:85,]
help(cumsum)
b = filter(a, user_id %in% c(9985, 9984))
b$compare_time[is.na(b$compare_time)] = 0
b = b %>%
group_by(user_id) %>%
mutate(session = ifelse(row_number() == 1, 1, 0) +
ifelse(row_number() > 1 & compare_time < 1800, 1, 0) +
cumsum(ifelse(compare_time >= 1800, 1, 0)))
b
b[75:85,]
b[1:10,]
b[160:170,]
b[75:85,]
b = filter(a, user_id %in% c(9985, 9984))
b$compare_time[is.na(b$compare_time)] = 0
b = b%>%
group_by(user_id) %>%
mutate(session = cumsum(compare_time == 1800) + 1L)
b[75:85,]
b = filter(a, user_id %in% c(9985, 9984))
b$compare_time[is.na(b$compare_time)] = 0
b = b %>%
group_by(user_id) %>%
mutate(session = ifelse(row_number() == 1, 1, 0) +
ifelse(row_number() > 1 & compare_time < 1800, 1, 0) +
cumsum(ifelse(compare_time >= 1800, 1, 0)))
b[75:85,]
b = filter(a, user_id %in% c(9985, 9984))
b$compare_time[is.na(b$compare_time)] = 0
b = b %>%
group_by(user_id) %>%
mutate(session = ifelse(row_number() == 1, 1, 0) +
ifelse(row_number() > 1 & compare_time <= 1800, 1, 0) +
cumsum(ifelse(compare_time > 1800, 1, 0)))
b[75:85,]
b = filter(a, user_id %in% c(9985, 9984))
b$compare_time[is.na(b$compare_time)] = 0
b = b%>%
group_by(user_id) %>%
mutate(session = cumsum(compare_time >= 1800) + 1L)
b
b[75:85,]
b[1:10,]
a = session_table %>%
group_by(user_id) %>%
mutate(compare_time = as.numeric(lag(time) - time)) %>%
mutate(session = cumsum(compare_time >= 1800) + 1L)
a[75:85,]
a[1:10,]
head(session_table)
a = session_table %>%
group_by(user_id) %>%
mutate(compare_time = as.numeric(lag(time) - time)) %>%
mutate(session = cumsum(compare_time >= 1800) + 1L)
a[75:85,]
b = filter(a, user_id %in% c(9985, 9984))
b$compare_time[is.na(b$compare_time)] = 0
b
b = b%>%
group_by(user_id) %>%
mutate(session = cumsum(compare_time >= 1800) + 1L)
b
b[75:85,]
b[1:10,]
b[160:170,]
refined_data = session_table %>%
group_by(user_id) %>%
mutate(compare_time = as.numeric(lag(time) - time))
refined_data = refined_data %>%
group_by(user_id) %>%
mutate(session = cumsum(compare_time >= 1800) +1L)
refined_data[75:85,]
refined_data = session_table %>%
group_by(user_id) %>%
mutate(compare_time = as.numeric(lag(time) - time))
refined_data$compare_time[is.na(b$compare_time)] = 0
refined_data = refined_data %>%
group_by(user_id) %>%
mutate(session = cumsum(compare_time >= 1800) +1L)
refined_data
refined_data = session_table %>%
group_by(user_id) %>%
mutate(compare_time = as.numeric(lag(time) - time))
head(refined_data)
refined_data$compare_time[is.na(b$compare_time)] = 0
head(refined_data)
refined_data$compare_time[is.na(refined_data$compare_time)] = 0
refined_data = refined_data %>%
group_by(user_id) %>%
mutate(session = cumsum(compare_time >= 1800) +1L)
refined_data[75:85,]
refined_data[1:10,]
refined_data[160:170,]
refined_data %>%
group_by(user_id, session) %>%
mutate(session_time = time[1])
b = refined_data %>%
group_by(user_id, session) %>%
mutate(session_time = time[1])
b
b
b[65:75]
b[65:75,]
b[75:85,]
