end.date = '2016-03-29',
dimensions = 'ga:screenName, ga:dimension1',
metrics = 'ga:screenviews',
sort = '-ga:screenviews')
head(ga.screen)
library('RMySQL')
library('dplyr')
library('ggplot2')
con = dbConnect(MySQL(),
user = 'root',
password='qlvmfh0627',
host='173.194.232.68')
rs = dbSendQuery(con, 'select * from bepro_api.user;')
data = fetch(rs, n = -1)
valid_user = data[!is.na(data$phone_verified_time),]
head(ga.screen)
match(8406, valid_user$id)]
match(8406, valid_user$id)
valid_user[3339,]
valid_user[3339,5]
library('stringi')
stri_encode(valid_user[3339,5], 'UTF8')
repair_encoding(valid_user[3339,5])
guess_encoding(valid_user[3339,5])
library('rvest')
repair_encoding(valid_user[3339,5])
guess_encoding(valid_user[3339,5])
iconv(valid_user[3339,5], 'CP949', 'UTF8')
dbSendQuery(con, 'set names utf8')
rs = dbSendQuery(con, 'select * from bepro_api.user;')
data = fetch(rs, n = -1)
valid_user = data[!is.na(data$phone_verified_time),]
match(8406, valid_user$id)
valid_user[3339,5]
match(8406, valid_user$id)
valid_user[match(8406, valid_user$id),5]
head(ga.screen)
change_name = function(x) {
valid_user[match(x, valid_user$id),5]
}
sapply(ga.screen$dimension1, change_name)
head(ga.screen)
ga.screen$dimension1 = sapply(ga.screen$dimension1, change_name)
head(ga.screen)
ga.event.category = get_ga(117496006,
start.date = '2016-03-02',
end.date = '2016-03-27',
dimensions = 'ga:eventCategory, ga:dimension1, ga:eventLabel',
metrics = 'ga:totalEvents',
sort = '-ga:totalEvents')
ga.event.category = get_ga(119252266,
start.date = '2016-03-02',
end.date = '2016-03-29',
dimensions = 'ga:eventCategory, ga:dimension1, ga:eventLabel',
metrics = 'ga:totalEvents',
sort = '-ga:totalEvents')
head(ga.event.category)
ga.event.category = get_ga(119252266,
start.date = '2016-03-02',
end.date = '2016-03-29',
dimensions = 'ga:eventCategory, ga:dimension1, ga:eventLabel',
metrics = 'ga:totalEvents',
sort = '-ga:eventLabel')
head(ga.event.category)
ga.event.category = get_ga(119252266,
start.date = '2016-03-02',
end.date = '2016-03-29',
dimensions = 'ga:eventCategory, ga:dimension1, ga:eventLabel',
metrics = 'ga:totalEvents',
sort = 'ga:eventLabel')
head(ga.event.category)
function(column_name) {
change_name = function(x) {
valid_user[match(x, valid_user$id),5]
}
column_name = sapply(column_name, change_name)
}
readable_user_id = function(column_name) {
change_name = function(x) {
valid_user[match(x, valid_user$id),5]
}
column_name = sapply(column_name, change_name)
}
readable_user_id(ga.screen$dimension1)
ga.screen$dimension1
ga.screen = get_ga(119252266,
start.date = '2016-03-02',
end.date = '2016-03-29',
dimensions = 'ga:screenName, ga:dimension1',
metrics = 'ga:screenviews',
sort = '-ga:screenviews')
readable_user_id(ga.screen$dimension1)
ga.screen$dimension1
readable_user_id(ga.screen$dimension1)
ga.screen$dimension1
change_name = function(x) {
valid_user[match(x, valid_user$id),5]
}
readable_user_id = function(column_name) {
column_name = sapply(column_name, change_name)
}
readable_user_id(ga.screen$dimension1)
ga.screen$dimension1
readable_user_id(ga.screen$dimension1)
ga.screen$dimension1
print(class(column_name))
class(ga.screen$dimension1)
class(change_name)
readable_user_id = function(data, col) {
data[, col] = sapply(data[, col], change_name)
}
readable_user_id(ga.screen$dimension1)
readable_user_id(ga.screen, dimension1)
readable_user_id(ga.screen, 'dimension1')
ga.screen$dimension1
change_name = function(x) {
valid_user[match(x, valid_user$id),5]
}
readable_user_id = function(data, col) {
data[, col] = sapply(data[, col], change_name)
}
readable_user_id(ga.screen, 'dimension1')
ga.screen$dimension1
ga.screen[, 'dimension1']
ga.screen[, 'dimension1'] = sapply(ga.screen[, 'dimension1'], change_name)
ga.screen[, 'dimension1']
ga.screen = get_ga(119252266,
start.date = '2016-03-02',
end.date = '2016-03-29',
dimensions = 'ga:screenName, ga:dimension1',
metrics = 'ga:screenviews',
sort = '-ga:screenviews')
head(ga.screen)
target_column = data[,col]
readable_user_id = function(data, col) {
target_column = data[,col]
target_column = sapply(target_column, change_name)
}
ga.screen[, 'dimension1']
readable_user_id(ga.screen, 'dimension1')
ga.screen[, 'dimension1']
class(ga.screen)
ga.screen[, 'dimension1'] =sapply(ga.screen[, 'dimension1'], change_name)
ga.screen$dimension1
source('~/GA.R', echo=TRUE)
.screen = get_ga(119252266,
start.date = '2016-03-02',
end.date = '2016-03-29',
dimensions = 'ga:screenName, ga:dimension1',
metrics = 'ga:screenviews',
sort = '-ga:screenviews')
.screen = get_ga(119252266,
start.date = '2016-03-02',
end.date = '2016-03-29',
dimensions = 'ga:screenName, ga:dimension1',
metrics = 'ga:screenviews',
sort = '-ga:screenviews')
ga.screen = get_ga(119252266,
start.date = '2016-03-02',
end.date = '2016-03-29',
dimensions = 'ga:screenName, ga:dimension1',
metrics = 'ga:screenviews',
sort = '-ga:screenviews')
ga.screen$dimension1
readable_user_id(ga.screen, 'dimension1')
ga.screen$dimension1
change_name = function(x) {
valid_user[match(x, valid_user$id),'name']
}
ga.screen[, 'dimension1'] =sapply(ga.screen[, 'dimension1'], change_name)
ga.screen$dimension1
readable_user_id(ga.screen, 'dimension1')
head(ga.screen)
ga.screen = get_ga(119252266,
start.date = '2016-03-02',
end.date = '2016-03-29',
dimensions = 'ga:screenName, ga:dimension1',
metrics = 'ga:screenviews',
sort = '-ga:screenviews')
readable_user_id(ga.screen, 'dimension1')
head(ga.screen)
readable_user_id = function(data, col) {
data[, col] = sapply(data[, col], change_name)
data
}
readable_user_id(ga.screen, 'dimension1')
head(ga.screen)
names(ga.screen)
head(ga.screen)
readable_user_id = function(data, col) {
data[, col] = sapply(data[, col], change_name)
data
}
head(ga.screen)
readable_user_id(ga.screen, 'dimension1')
readable_user_id = function(data, col) {
data[, col] = sapply(data[, col], change_name)
data
}
ga.screen = readable_user_id(ga.screen, 'dimension1')
head(ga.screen)
readable_user_id = function(data, col) {
change_name = function(x) {
valid_user[match(x, valid_user$id),'name']
}
data[, col] = sapply(data[, col], change_name)
data
}
ga.screen = get_ga(119252266,
start.date = '2016-03-02',
end.date = '2016-03-29',
dimensions = 'ga:screenName, ga:dimension1',
metrics = 'ga:screenviews',
sort = '-ga:screenviews')
ga.screen = readable_user_id(ga.screen, 'dimension1')
head(ga.screen)
readable_user_id = function(data, col) {
change_name = function(x) {
valid_user[match(x, valid_user$id),'name']
}
data[, col] = sapply(data[, col], change_name)
data
}
#get GA screen data
ga.screen = get_ga(119252266,
start.date = '2016-03-02',
end.date = '2016-03-30',
dimensions = 'ga:screenName, ga:dimension1',
metrics = 'ga:screenviews',
sort = '-ga:screenviews')
#get GA event category
ga.event.category = get_ga(119252266,
start.date = '2016-03-02',
end.date = '2016-03-30',
dimensions = 'ga:eventCategory, ga:dimension1, ga:eventLabel',
metrics = 'ga:totalEvents',
sort = 'ga:eventLabel')
setwd("~/")
setwd("~/bepro11-analytics")
head(ga.screen)
ga.screen = get_ga(119252266,
start.date = '2016-03-02',
end.date = '2016-03-30',
dimensions = 'ga:screenName, ga:dimension1',
metrics = 'ga:screenviews',
sort = '-ga:dimension1')
head(ga.screen)
table(ga.screen$dimension1)
library(dplyr)
ga.screen %>%
group_by(dimension1) %>%
summarise(n = sum(n))
ga.screen %>%
group_by(dimension1) %>%
summarise(n = n())
table = table(ga.screen$dimension1)
class(table)
table
table = as.data.frame(table(ga.screen$dimension1))
table
nrow(table)
ga.screen %>%
group_by(dimension1) %>%
summarise(n = n())
ga.event.category = get_ga(119252266,
start.date = '2016-03-02',
end.date = '2016-03-30',
dimensions = 'ga:eventCategory, ga:dimension1, ga:eventLabel',
metrics = 'ga:totalEvents',
sort = 'ga:dimension1')
head(ga.event.category)
table2 = as.data.frame(table(ga.screen$dimension1))
nrow(table2)
ga.event.category$dimension1 == 4594
ga.event.category[ga.event.category$dimension1 == 4594]
ga.event.category[ga.event.category$dimension1 == 4594,]
ga.screen[ga.screen$dimension1 == 4594,]
head(table2)
ga.screen[ga.screen$dimension1 == 1458,]
ga.event.category[ga.event.category$dimension1 == 1458,]
head(table2)
ga.screen[ga.screen$dimension1 == 5203,]
ga.event.category[ga.event.category$dimension1 == 5203,]
ga.event.category[ga.event.category$dimension1 == 5203,]
head(table2)
ga.screen[ga.screen$dimension1 == 5342,]
ga.event.category[ga.event.category$dimension1 == 5342,]
ga.screen[ga.screen$dimension1 == 5203,]
ga.event.category[ga.event.category$dimension1 == 5203,]
head(table2)
ga.screen[ga.screen$dimension1 == 5521,]
ga.event.category[ga.event.category$dimension1 == 5521,]
head(table2)
ga.screen[ga.screen$dimension1 == 586,]
ga.event.category[ga.event.category$dimension1 == 586,]
ga.screen[ga.screen$dimension1 == 5342,]
ga.event.category[ga.event.category$dimension1 == 5342,]
ga.screen[ga.screen$dimension1 == 5203,]
ga.event.category[ga.event.category$dimension1 == 5203,]
ga.screen[ga.screen$dimension1 == 1458,]
ga.event.category[ga.event.category$dimension1 == 1458,]
ga.screen[ga.screen$dimension1 == 4594,]
ga.event.category[ga.event.category$dimension1 == 4594,]
ga.user = get_ga(119252266,
start.date = '2016-02-25',
end.date = '2016-03-30',
metrics = 'ga:users',
dimensions = 'ga:date',
sort = 'ga:date'
)
nrow(ga.user)
ga.user
20+175+146
ga.week.active = get_ga(119252266,
start.date = '2016-03-02',
end.date = '2016-03-27',
metrics = 'ga:7dayUsers',
dimensions = 'ga:date',
sort = 'ga:date')
ga.week.active
ga.week.active = get_ga(119252266,
start.date = '2016-03-02',
end.date = '2016-03-30',
metrics = 'ga:7dayUsers',
dimensions = 'ga:date',
sort = 'ga:date')
ga.week.active
ga.event.category[ga.event.category$dimension1 == 5342,]
ga.screen[ga.screen$dimension1 == 5342,]
ga.event.category[ga.event.category$dimension1 == 5342,]
ga.screen[ga.screen$dimension1 == 5203,]
ga.event.category[ga.event.category$dimension1 == 5203,]
ga.screen[ga.screen$dimension1 == 1458,]
ga.event.category[ga.event.category$dimension1 == 1458,]
ga.screen[ga.screen$dimension1 == 4594,]
ga.event.category[ga.event.category$dimension1 == 4594,]
ga.screen = get_ga(117496006,
start.date = '2016-03-02',
end.date = '2016-03-30',
dimensions = 'ga:screenName, ga:dimension1',
metrics = 'ga:screenviews',
sort = '-ga:dimension1')
ga.event.category = get_ga(117496006,
start.date = '2016-03-02',
end.date = '2016-03-30',
dimensions = 'ga:eventCategory, ga:dimension1, ga:eventLabel',
metrics = 'ga:totalEvents',
sort = 'ga:dimension1')
table = as.data.frame(table(ga.screen$dimension1))
table2 = as.data.frame(table(ga.screen$dimension1))
nrow(table2)
nrow(table)
head(table2)
ga.screen[ga.screen$dimension1 == 4594,]
ga.event.category[ga.event.category$dimension1 == 4594,]
ga.screen[ga.screen$dimension1 == 1458,]
ga.event.category[ga.event.category$dimension1 == 1458,]
ga.screen[ga.screen$dimension1 == 5203,]
ga.event.category[ga.event.category$dimension1 == 5203,]
ga.screen = get_ga(119252266,
start.date = '2016-03-02',
end.date = '2016-03-30',
dimensions = 'ga:screenName, ga:dimension1',
metrics = 'ga:screenviews',
sort = '-ga:dimension1')
#get GA event category
ga.event.category = get_ga(119252266,
start.date = '2016-03-02',
end.date = '2016-03-30',
dimensions = 'ga:eventCategory, ga:dimension1, ga:eventLabel',
metrics = 'ga:totalEvents',
sort = 'ga:dimension1')
ga.screen[ga.screen$dimension1 == 5203,]
ga.event.category[ga.event.category$dimension1 == 5203,]
ga.screen = get_ga(117496006,
start.date = '2016-03-02',
end.date = '2016-03-30',
dimensions = 'ga:screenName, ga:dimension1',
metrics = 'ga:screenviews',
sort = '-ga:dimension1')
#get GA event category
ga.event.category = get_ga(117496006,
start.date = '2016-03-02',
end.date = '2016-03-30',
dimensions = 'ga:eventCategory, ga:dimension1, ga:eventLabel',
metrics = 'ga:totalEvents',
sort = 'ga:dimension1')
ga.screen[ga.screen$dimension1 == 5203,]
ga.event.category[ga.event.category$dimension1 == 5203,]
ga.screen[ga.screen$dimension1 == 1458,]
ga.event.category[ga.event.category$dimension1 == 1458,]
ga.screen[ga.screen$dimension1 == 4594,]
ga.event.category[ga.event.category$dimension1 == 4594,]
ga.screen[ga.screen$dimension1 == 5203,]
ga.event.category[ga.event.category$dimension1 == 5203,]
head(table2)
ga.screen[ga.screen$dimension1 == 586,]
ga.event.category[ga.event.category$dimension1 == 586,]
valid_user$name=='강현욱'
valid_user[valid_user$name=='강현욱',]
ga.screen[ga.screen$dimension1 == 1405,]
ga.event.category[ga.event.category$dimension1 == 1405,]
source('~/bepro11-analytics/[module] get_ga_data.R', echo=TRUE)
ga.screen = get_ga(119252266,
start.date = '2016-03-02',
end.date = '2016-03-30',
dimensions = 'ga:screenName, ga:dimension1',
metrics = 'ga:screenviews',
sort = '-ga:dimension1')
#get GA event category
ga.event.category = get_ga(119252266,
start.date = '2016-03-02',
end.date = '2016-03-30',
dimensions = 'ga:eventCategory, ga:dimension1, ga:eventLabel',
metrics = 'ga:totalEvents',
sort = 'ga:dimension1')
ga.screen[ga.screen$dimension1 == 1405,]
ga.event.category[ga.event.category$dimension1 == 1405,]
ga.screen = get_ga(119252266,
start.date = '2016-03-02',
end.date = '2016-03-30',
dimensions = 'ga:screenName, ga:dimension1',
metrics = 'ga:screenviews',
sort = '-ga:dimension1')
#get GA event category
ga.event.category = get_ga(119252266,
start.date = '2016-03-02',
end.date = '2016-03-30',
dimensions = 'ga:eventCategory, ga:dimension1, ga:eventLabel',
metrics = 'ga:totalEvents',
sort = 'ga:dimension1')
ga.screen = get_ga(117496006,
start.date = '2016-03-02',
end.date = '2016-03-30',
dimensions = 'ga:screenName, ga:dimension1',
metrics = 'ga:screenviews',
sort = '-ga:dimension1')
ga.screen = get_ga(117496006,
start.date = '2016-03-02',
end.date = '2016-03-30',
dimensions = 'ga:screenName, ga:dimension1',
metrics = 'ga:screenviews',
sort = '-ga:dimension1')
#get GA event category
ga.event.category = get_ga(117496006,
start.date = '2016-03-02',
end.date = '2016-03-30',
dimensions = 'ga:eventCategory, ga:dimension1, ga:eventLabel',
metrics = 'ga:totalEvents',
sort = 'ga:dimension1')
ga.screen[ga.screen$dimension1 == 1405,]
ga.event.category[ga.event.category$dimension1 == 1405,]
ga.screen[ga.screen$dimension1 == 5521,]
ga.event.category[ga.event.category$dimension1 == 5521,]
ga.event.category = get_ga(117496006,
start.date = '2016-03-02',
end.date = '2016-03-30',
dimensions = 'ga:eventCategory, ga:dimension1, ga:eventAction, ga:eventLabel',
metrics = 'ga:totalEvents',
sort = 'ga:dimension1')
ga.screen[ga.screen$dimension1 == 1405,]
ga.event.category[ga.event.category$dimension1 == 1405,]
ga.screen[ga.screen$dimension1 == 5521,]
ga.event.category[ga.event.category$dimension1 == 5521,]
ga.screen[ga.screen$dimension1 == 1458,]
ga.event.category[ga.event.category$dimension1 == 1458,]
ga.screen[ga.screen$dimension1 == 4594,]
ga.event.category[ga.event.category$dimension1 == 4594,]
ga.screen[ga.screen$dimension1 == 1458,]
ga.event.category[ga.event.category$dimension1 == 1458,]
ga.screen[ga.screen$dimension1 == 5203,]
ga.event.category[ga.event.category$dimension1 == 5203,]
ga.screen[ga.screen$dimension1 == 5342,]
ga.event.category[ga.event.category$dimension1 == 5342,]
ga.screen[ga.screen$dimension1 == 5521,]
ga.event.category[ga.event.category$dimension1 == 5521,]
ga.screen[ga.screen$dimension1 == 1405,]
ga.event.category[ga.event.category$dimension1 == 1405,]
valid_user[valid_user$id==5521,'name']
library(bigrquery)
project = 'bepro11-api'
sql = 'select metadata.timestamp,
structPayload.gesture.gesture.pointerType,
structPayload.eventData.url,
structPayload.eventData.type,
structPayload.userId,
httpRequest.userAgent
from [compute_googleapis_com_event_log_20160330]'
rawtable = query_exec(sql, project = project)
names(rawtable)
rawtable = query_exec(sql, project = project)
rawtable = query_exec(sql, project = project)
rawtable = query_exec(sql, project)
project = 'bepro11-api'
sql = 'select metadata.timestamp,
structPayload.gesture.gesture.pointerType,
structPayload.eventData.url,
structPayload.eventData.type,
structPayload.userId,
httpRequest.userAgent
from [event_log.compute_googleapis_com_event_log_20160330]'
rawtable = query_exec(sql, project)
sql = 'select metadata.timestamp,
structPayload.eventData.gesture.pointerType,
structPayload.eventData.url,
structPayload.eventData.type,
structPayload.userId,
httpRequest.userAgent
from [event_log.compute_googleapis_com_event_log_20160330]'
rawtable = query_exec(sql, project)
names(rawtable)
rawtable = query_exec(sql, project)
