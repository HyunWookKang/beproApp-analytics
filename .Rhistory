filter(!is.na(ngClick)) %>%
filter(ngClick != " " & href != " ")
visit_league[1:200,]
visit_league$ngClick[1]
visit_league = visit_league %>%
filter(!is.na(href)) %>%
filter(!is.na(ngClick)) %>%
visit_league = tw_event_table[page_url_regex,]
visit_league = visit_league %>%
filter(!is.na(href)) %>%
filter(!is.na(ngClick)) %>%
filter(ngClick != "")
visit_league[1:200,]
visit_league = tw_event_table[page_url_regex,]
visit_league = visit_league %>%
filter(!is.na(href)) %>%
filter(!is.na(ngClick)) %>%
filter(ngClick != "" | href != "")
visit_league[1:200,]
visit_league[1:200,]
nrow(visit_league)
backup = visit_league
backup = backup %>%
filter(event_type == 'touch')
nrow(backup)
backup[1:200m]
backup[1:200,]
backup = visit_league
visit_league[1:200,]
visit_league = visit_league %>%
filter(!is.na(href)) %>%
filter(!is.na(ngClick)) %>%
filter(ngClick != "" | (href != "" & event_type == 'touch'))
visit_league[1:200,]
nrow(visit_league)
backup = visit_league
help(regex)
grepl('*match*', '/matches/1263')
backup = backup %>%
mutate(sort = ifelse(ngClick != "", ngClick, ifelse(grepl('*match*', href), 'match', href)))
backup[1:200m]
backup[1:200,]
backup[1:200,]
backup = backup %>%
mutate(sort = ifelse(ngClick != "", ngClick,
ifelse(grepl('*match*', href), 'match',
ifelse(grepl('*video*', href), 'video',
ifelse(grepl('*team*', href), 'team')))))
backup = backup %>%
mutate(sort = ifelse(ngClick != "", ngClick,
ifelse(grepl('*match*', href), 'match',
ifelse(grepl('*video*', href), 'video',
ifelse(grepl('*team*', href), 'team', href)))))
backup[1:200,]
table(backup$sort)
sort_count = as.data.frame(table(backup$sort))
sort_count
sort_count[-order('Freq'),]
sort_count[-order('Freq'),]
sort_count[-order(Freq),]
sort_count[order('Freq'),]
sort_count = as.data.frame(table(backup$sort))
sort_count[order('Freq'),]
sort_count[order(-'Freq'),]
help(order)
sort_count[order(sort_count$Freq),]
sort_count[-order(sort_count$Freq),]
sort_count = as.data.frame(table(backup$sort))
sort_count[order(-sort_count$Freq),]
mutate(sort = ifelse(ngClick != "", ngClick,
ifelse(grepl('*match*', href), 'match',
ifelse(grepl('*video*', href), 'video',
ifelse(grepl('*team*', href), 'team',
ifelse(grepl('*images*', href), 'image',
backup = backup %>%
mutate(sort = ifelse(ngClick != "", ngClick,
ifelse(grepl('*match*', href), 'match',
ifelse(grepl('*video*', href), 'video',
ifelse(grepl('*team*', href), 'team',
ifelse(grepl('*images*', href), 'image',
ifelse(grepl('*users*', href), 'user',
ifelse(grepl('*league*', href), 'league', href))))))))
sort_count = as.data.frame(table(backup$sort))
sort_count[order(-sort_count$Freq),]
sort_count = sort_count[order(-sort_count$Freq),]
help(pie)
pie(sort_count, labels = names, col = Var1, main="First Action at Newsfeed Page")
pie(sort_count, col = Var1, main="First Action at Newsfeed Page")
pie(sort_count, col = Var1)
pie(sort_count$Freq, col = Var1)
pie(sort_count$Freq, col = sort_count$Var1)
pie(sort_count$Freq[2:length(sort_count)], col = sort_count$Var1[2:length(sort_count)])
pie(sort_count$Freq[2:nrow(sort_count)], col = sort_count$Var1[2:nrow(sort_count)])
help(pie)
pie(sort_count$Freq[2:nrow(sort_count)], col = sort_count$Var1[2:nrow(sort_count)], labels = names(sort_count))
pie(sort_count$Freq[2:nrow(sort_count)], col = sort_count$Var1[2:nrow(sort_count)], labels = sort_count$Var1)
help(pie)
pie(sort_count$Freq[2:nrow(sort_count)], col = sort_count$Var1[2:nrow(sort_count)], labels = sort_count$Var1)
help(pie)
pie(sort_count$Freq[2:nrow(sort_count)],
col = sort_count$Var1[2:nrow(sort_count)],
labels = sort_count$Var1,
clockwise = TRUE)
help(pie)
pie(sort_count$Freq[2:nrow(sort_count)],
col = sort_count$Var1[2:nrow(sort_count)],
labels = sort_count$Var1,
clockwise = TRUE)
sort_count %>%
mutate(percentage = Freq/sum(sort_count$Freq))
sort_count %>%
mutate(percentage = round(Freq/sum(sort_count$Freq)*100,2))
sort_count = sort_count %>%
mutate(percentage = round(Freq/sum(sort_count$Freq)*100,2))
sort_count_ex_match = sort_count %>%
mutate(new_percentage = round(Freq/sum(sort_count$Freq[2:nrow(sort_count)])*100,2))
pie(sort_count$Freq[2:nrow(sort_count)],
col = sort_count$Var1[2:nrow(sort_count)],
labels = sort_count$Var1,
clockwise = TRUE)
pie(sort_count_ex_match$new_percentage[2:nrow(sort_count_ex_match)],
col = sort_count_ex_match$Var1[2:nrow(sort_count_ex_match)],
labels = sort_count_ex_match$Var1,
clockwise = TRUE)
pie(sort_count_ex_match$new_percentage[2:nrow(sort_count_ex_match)],
col = sort_count_ex_match$Var1[2:nrow(sort_count_ex_match)],
labels = sort_count_ex_match$Var1,
clockwise = TRUE)
nrow(sort_count_ex_match)
sort_count_ex_match
sum(sort_count_ex_match$new_percentage[2:nrow(sort_count_ex_match)])
sort_count_ex_match
sort_count
backup
backup
session_data
head(tw_event_table)
page_url_regex = grep('*leagues*', session_data$page_url)
visit_league = tw_event_table[page_url_regex,]
visit_league = visit_league %>%
filter(!is.na(href)) %>%
filter(!is.na(ngClick)) %>%
filter(ngClick != "" | (href != "" & event_type == 'touch'))
backup = visit_league
backup = backup %>%
mutate(sort = ifelse(ngClick != "", ngClick,
ifelse(grepl('*match*', href), 'match',
ifelse(grepl('*video*', href), 'video',
ifelse(grepl('*team*', href), 'team',
ifelse(grepl('*images*', href), 'image',
ifelse(grepl('*users*', href), 'user',
ifelse(grepl('*league*', href), 'league', href))))))))
backup[1:200,]
page_url_regex = grep('*leagues*', session_data$page_url)
visit_league = tw_event_table[page_url_regex,]
visit_league = visit_league %>%
filter(!is.na(href)) %>%
filter(!is.na(ngClick)) %>%
filter(ngClick != "" | (href != "" & event_type == 'touch'))
backup = visit_league
head(backup)
page_url_regex = grep('*leagues*', session_data$page_url)
visit_league = session_data[page_url_regex,]
visit_league = visit_league %>%
filter(!is.na(href)) %>%
filter(!is.na(ngClick)) %>%
filter(ngClick != "" | (href != "" & event_type == 'touch'))
backup = visit_league
backup = backup %>%
mutate(sort = ifelse(ngClick != "", ngClick,
ifelse(grepl('*match*', href), 'match',
ifelse(grepl('*video*', href), 'video',
ifelse(grepl('*team*', href), 'team',
ifelse(grepl('*images*', href), 'image',
ifelse(grepl('*users*', href), 'user',
ifelse(grepl('*league*', href), 'league', href))))))))
backup[1:200,]
backup = select(backup, -compare_time)
backup[1:200,]
session_table = filter(tw_event_table, !is.na(user_id))
session_table$time = as.POSIXct(strptime(session_table$time, '%Y-%m-%d %H:%M:%S'))
session_data = session_table %>%
group_by(user_id) %>%
mutate(compare_time = as.numeric(lag(time) - time))
session_data$compare_time[is.na(session_data$compare_time)] = 0
session_data = session_data %>%
group_by(user_id) %>%
mutate(session = cumsum(compare_time >= 1800) +1L)
head(session_data)
session_data[1:20m]
session_data[1:20,]
session_data[1:20,]
session_data = session_data %>%
group_by(user_id, session) %>%
mutate(session_time = time[n()])
session_data[1:20,]
session_data[1:20,]
session_data[1:20,]
session_data[1:30,]
session_data[1:30,]
session_data = session_data %>%
group_by(user_id, session) %>%
mutate(session_time = time[n()])
page_url_regex = grep('*leagues*', session_data$page_url)
visit_league = session_data[page_url_regex,]
visit_league = visit_league %>%
filter(!is.na(href)) %>%
filter(!is.na(ngClick)) %>%
filter(ngClick != "" | (href != "" & event_type == 'touch'))
backup = visit_league
backup = backup %>%
mutate(sort = ifelse(ngClick != "", ngClick,
ifelse(grepl('*match*', href), 'match',
ifelse(grepl('*video*', href), 'video',
ifelse(grepl('*team*', href), 'team',
ifelse(grepl('*images*', href), 'image',
ifelse(grepl('*users*', href), 'user',
ifelse(grepl('*league*', href), 'league', href))))))))
backup = select(backup, -compare_time)
backup[1:200,]
backup[!duplicated(backup),]
backup[11:200,]
nrow(backup)
nrow(backup[!duplicated(backup),])
backup = bbackup[!duplicated(backup),]
backup = backup[!duplicated(backup),]
sort_count = as.data.frame(table(backup$sort))
sort_count = sort_count[order(-sort_count$Freq),]
sort_count = sort_count %>%
mutate(percentage = round(Freq/sum(sort_count$Freq)*100,2))
sort_count_ex_match = sort_count %>%
mutate(new_percentage = round(Freq/sum(sort_count$Freq[2:nrow(sort_count)])*100,2))
pie(sort_count$Freq[2:nrow(sort_count)],
col = sort_count$Var1[2:nrow(sort_count)],
labels = sort_count$Var1,
clockwise = TRUE)
sort_count_ex_match
sum(sort_count_ex_match$new_percentage)
sum(sort_count_ex_match$new_percentage[2:nrow(sort_count_ex_match)])
sort_count
nrow(backup)
backup = filter(backup, ngClick != '$ionicGoBack()')
nrow(backup)
sort_count = as.data.frame(table(backup$sort))
sort_count = sort_count[order(-sort_count$Freq),]
sort_count = sort_count %>%
mutate(percentage = round(Freq/sum(sort_count$Freq)*100,2))
sort_count_ex_match = sort_count %>%
mutate(new_percentage = round(Freq/sum(sort_count$Freq[2:nrow(sort_count)])*100,2))
sort_count
sort_count_ex_match
sum(sort_count$percentage[2:nrow(sort_count)])
sort_count
sort_count_ex_match
page_url_regex = grep('*leagues*', session_data$page_url)
visit_league = session_data[page_url_regex,]
visit_league = visit_league %>%
filter(!is.na(href)) %>%
filter(!is.na(ngClick)) %>%
filter(ngClick != "" | (href != ""))
backup = visit_league
backup = backup %>%
mutate(sort = ifelse(ngClick != "", ngClick,
ifelse(grepl('*match*', href), 'match',
ifelse(grepl('*video*', href), 'video',
ifelse(grepl('*team*', href), 'team',
ifelse(grepl('*images*', href), 'image',
ifelse(grepl('*users*', href), 'user',
ifelse(grepl('*league*', href), 'league', href))))))))
backup = select(backup, -compare_time)
backup = backup[!duplicated(backup),]
backup = filter(backup, ngClick != '$ionicGoBack()')
sort_count = as.data.frame(table(backup$sort))
sort_count = sort_count[order(-sort_count$Freq),]
sort_count = sort_count %>%
mutate(percentage = round(Freq/sum(sort_count$Freq)*100,2))
sort_count_ex_match = sort_count %>%
mutate(new_percentage = round(Freq/sum(sort_count$Freq[2:nrow(sort_count)])*100,2))
sort_count
sort_count_ex_match
backup[11:200,]
head(total_rawtable)
library(bigrquery)
library(dplyr)
head(all_month_rawtable)
all_date = c(20160315:20160331, 20160401:20160430, 20160501:20160531, 20160601:20160620)
tw_full_sql = paste(sql, connect_query_table(tw_date), 'where structPayload.eventData.type == "click" or
structPayload.eventData.type == "touch" or
structPayload.eventData.type == "view"')
match_full_sql = paste(sql, connect_query_table(all_date), 'where structPayload.eventData.type == "click" or
structPayload.eventData.type == "touch" or
structPayload.eventData.type == "view"')
match_rawtable = query_exec(match_full_sql, project, max_pages = Inf)
all_date = c(20160315:20160331, 20160401:20160430, 20160501:20160531, 20160601:20160619)
match_full_sql = paste(sql, connect_query_table(all_date), 'where structPayload.eventData.type == "click" or
structPayload.eventData.type == "touch" or
structPayload.eventData.type == "view"')
match_rawtable = query_exec(match_full_sql, project, max_pages = Inf)
all_date = c(20160315:20160331, 20160401:20160430, 20160501:20160531, 20160601:20160614)
match_full_sql = paste(sql, connect_query_table(all_date), 'where structPayload.eventData.type == "click" or
structPayload.eventData.type == "touch" or
structPayload.eventData.type == "view"')
match_rawtable = query_exec(match_full_sql, project, max_pages = Inf)
head(match_rawtable)
names(match_rawtable) = c('time', 'ngclick', 'url', 'href', 'type', 'userid')
match_rawtable %>%
filter(!is.na(href), !is.na(ngclick), !is.na(url)) %>%
filter(ngclick != "" | (href != "")) %>%
filter(ngclick = "openModal('WriteMatchResult');")
match_rawtable %>%
filter(!is.na(href) & !is.na(ngclick) & !is.na(url)) %>%
filter(ngclick != "" | (href != "")) %>%
filter(ngclick = "openModal('WriteMatchResult');")
names(match_rawtable) = c('time', 'ngclick', 'url', 'href', 'type', 'userid')
match_rawtable %>%
filter(!is.na(href), !is.na(ngclick), !is.na(url)) %>%
filter(ngclick != "" | (href != "")) %>%
filter(ngclick = "openModal('WriteMatchResult');")
head(match_rawtable)
match_rawtable %>%
filter(!is.na(href)) %>%
filter(!is.na(ngclick)) %>%
filter(!is.na(url)) %>%
filter(ngclick != "" | (href != "")) %>%
filter(ngclick = "openModal('WriteMatchResult');")
match_rawtable %>%
filter(!is.na(href), !is.na(ngclick), !is.na(url)) %>%
filter(ngclick != "" | (href != "")) %>%
filter(ngclick == "openModal('WriteMatchResult');")
match_rawtable %>%
filter(!is.na(href), !is.na(ngclick), !is.na(url)) %>%
filter(ngclick != "" | (href != ""))
match_rawtable %>%
filter(!is.na(href), !is.na(ngclick), !is.na(url)) %>%
filter(ngclick != "" | (href != ""))
match_rawtable %>%
filter(!is.na(href), !is.na(ngclick), !is.na(url)) %>%
filter(ngclick != "" | (href != ""))  %>%
filter(ngclick == 'openModal("WriteMatchResult");')
match_rawtable$ngclick == "openModal('WriteMatchResult')"
match_rawtable$ngclick[1:200]
match_rawtable %>%
filter(!is.na(href), !is.na(ngclick), !is.na(url)) %>%
filter(ngclick != "" | (href != ""))  %>%
filter(ngclick == '"openModal("WriteMatchResult");"')
match_rawtable %>%
filter(!is.na(href), !is.na(ngclick), !is.na(url)) %>%
filter(ngclick != "" | (href != ""))  %>%
filter(ngclick == '"openPopup("schedule")"')
match_rawtable %>%
filter(!is.na(href), !is.na(ngclick), !is.na(url)) %>%
filter(ngclick != "" | (href != ""))  %>%
filter(ngclick == '"openPopup('schedule')"')
match_rawtable %>%
filter(!is.na(href), !is.na(ngclick), !is.na(url)) %>%
filter(ngclick != "" | (href != ""))  %>%
filter(ngclick == "openPopup('schedule')")
match_rawtable %>%
filter(!is.na(href), !is.na(ngclick), !is.na(url)) %>%
filter(ngclick != "" | (href != ""))  %>%
filter(ngclick == "openModal('WriteMatchResult');")
match_rawtable %>%
filter(!is.na(href), !is.na(ngclick), !is.na(url)) %>%
filter(ngclick != "" | (href != ""))  %>%
filter(ngclick == "openModal('WriteMatchResult')")
match_rawtable %>%
filter(!is.na(href), !is.na(ngclick), !is.na(url)) %>%
filter(ngclick != "" | (href != ""))  %>%
filter(ngclick == "openModal('WriteMatchResult')") %>%
summarise(match_record = n())
a = match_rawtable %>%
filter(!is.na(href), !is.na(ngclick), !is.na(url)) %>%
filter(ngclick != "" | (href != ""))  %>%
filter(ngclick == "openModal('WriteMatchResult')")
nrow(a)
match_rawtable %>%
filter(ngclick == "showPopup('changeTime')") %>%
summarise(time_click = n())
1523/4640
extract.with.context <- function(x, rows, after = 0, before = 0) {
match.idx  <- which(rownames(x) %in% rows)
span       <- seq(from = -before, to = after)
extend.idx <- c(outer(match.idx, span, `+`))
extend.idx <- Filter(function(i) i > 0 & i <= nrow(x), extend.idx)
extend.idx <- sort(unique(extend.idx))
return(x[extend.idx, , drop = FALSE])
}
help(outer)
extract.with.context(match_rawtable, "openModal('WriteMatchResult')", after = 2, before = 2)
extract.with.context <- function(x, rows, after = 0, before = 0) {
match.idx  <- which(rownames(x) %in% rows)
span       <- seq(from = -before, to = after)
extend.idx <- c(outer(match.idx, span, `+`))
extend.idx <- Filter(function(i) i > 0 & i <= nrow(x), extend.idx)
extend.idx <- sort(unique(extend.idx))
return(x[extend.idx, , drop = FALSE])
}
extract.with.context(match_rawtable, "openModal('WriteMatchResult')", after = 2, before = 2)
rownames(match_rawtable) = 1:nrow(match_rawtable)
match_rawtable[which(rownames(match_rawtable) %in% c("openModal('WriteMatchResult')")) + c(-2, 2), ]
match_rawtable[which(match_rawtable$ngclick %in% c("openModal('WriteMatchResult')")) + c(-2, 2), ]
head(match_rawtable[which(match_rawtable$ngclick %in% c("openModal('WriteMatchResult')")) + c(-2, 2), ])
match_rawtable[which(match_rawtable$ngclick %in% c("openModal('WriteMatchResult')")) + c(-2, 2), ][1:100,]
match_rawtable[which(match_rawtable$ngclick %in% c("openModal('WriteMatchResult')")) + c(-2:2), ][1:100,]
match_rawtable = arrange(match_rawtable, time, userid)
match_rawtable[which(match_rawtable$ngclick %in% c("openModal('WriteMatchResult')")) + c(-2:2), ][1:100,]
match_rawtable[which(match_rawtable$ngclick %in% c("openModal('WriteMatchResult')")) + c(-2:2), ][1:100,]
match_rawtable = arrange(match_rawtable, -time, userid)
match_rawtable = arrange(match_rawtable, desc(time), userid)
match_rawtable[which(match_rawtable$ngclick %in% c("openModal('WriteMatchResult')")) + c(-2:2), ][1:100,]
match_rawtable = arrange(match_rawtable, userid, desc(time))
match_rawtable[which(match_rawtable$ngclick %in% c("openModal('WriteMatchResult')")) + c(-2:2), ][1:100,]
readable_user_id(1063)
match_rawtable[which(match_rawtable$ngclick %in% c("openModal('WriteMatchResult')")) + c(-2:2), ][101:200,]
library(bigrquery)
library(dplyr)
tw_date = c(20160620:20160626)
tw_full_sql = paste(sql, connect_query_table(tw_date), 'where structPayload.eventData.type == "click" or
structPayload.eventData.type == "swipe" or
structPayload.eventData.type == "touch" or
structPayload.eventData.type == "view"')
tw_rawtable = query_exec(tw_full_sql, project, max_pages = Inf)
names(tw_rawtable) = c('time', 'ngClick', 'page_url', 'href', 'event_type', 'user_id')
tw_date = c(20160621:20160626)
tw_full_sql = paste(sql, connect_query_table(tw_date), 'where structPayload.eventData.type == "click" or
structPayload.eventData.type == "swipe" or
structPayload.eventData.type == "touch" or
structPayload.eventData.type == "view"')
tw_rawtable = query_exec(tw_full_sql, project, max_pages = Inf)
names(tw_rawtable) = c('time', 'ngClick', 'page_url', 'href', 'event_type', 'user_id')
tw_event_table = tw_rawtable %>%
arrange(user_id, desc(time))
lw_date = c(20160607:20160614)
lw_full_sql = paste(sql, connect_query_table(lw_date), 'where structPayload.eventData.type == "click" or
structPayload.eventData.type == "swipe" or
structPayload.eventData.type == "touch" or
structPayload.eventData.type == "view"')
lw_rawtable = query_exec(lw_full_sql, project, max_pages = Inf)
names(lw_rawtable) = c('time', 'ngClick', 'page_url', 'href', 'event_type', 'user_id')
lw_event_table = lw_rawtable %>%
arrange(user_id, desc(time))
all_month_date = c(20150527:20160531, 20160601:20160614, 20160621:20160626)
month_sql = 'select metadata.timestamp, structPayload.userId, from '
all_month_full_sql = paste(month_sql, connect_query_table(all_month_date))
all_month_rawtable = query_exec(all_month_full_sql, project, max_pages = Inf)
all_month_date = c(20160527:20160531, 20160601:20160614, 20160621:20160626)
month_sql = 'select metadata.timestamp, structPayload.userId, from '
all_month_full_sql = paste(month_sql, connect_query_table(all_month_date))
all_month_rawtable = query_exec(all_month_full_sql, project, max_pages = Inf)
all_month_event_table$date = gsub('-', '', as.Date(all_month_event_table$time))
month_active_user = all_month_event_table[, c('user_id', 'date')]
month_active_user = month_active_user[!duplicated(month_active_user), ]
month_active_user = arrange(month_active_user, desc(date))
this_week_date = tw_date
month_active_user %>%
summarise(MAU = n_distinct(user_id), MAU_ratio = n_distinct(user_id) / nrow(valid_user))
filter(date %in% this_week_date) %>%
summarise(WAU = n_distinct(user_id), WAU_ration = n_distinct(user_id) / nrow(valid_user))
filter(date %in% this_week_date) %>%
summarise(n = n()) %>%
min.DAU = min(n), min.ratio = min(n)/nrow(valid_user),
user = nrow(valid_user))
month_active_user %>%
summarise(Avg.DAU = mean(n), Avg.ratio = mean(n)/nrow(valid_user),
month_active_user %>%
group_by(date) %>%
max.DAU =max(n), max.ratio = max(n)/nrow(valid_user),
all_month_event_table$date = gsub('-', '', as.Date(all_month_event_table$time))
month_active_user = all_month_event_table[, c('user_id', 'date')]
month_active_user = month_active_user[!duplicated(month_active_user), ]
month_active_user = arrange(month_active_user, desc(date))
this_week_date = tw_date
month_active_user %>%
summarise(MAU = n_distinct(user_id), MAU_ratio = n_distinct(user_id) / nrow(valid_user))
month_active_user %>%
filter(date %in% this_week_date) %>%
summarise(WAU = n_distinct(user_id), WAU_ration = n_distinct(user_id) / nrow(valid_user))
month_active_user %>%
filter(date %in% this_week_date) %>%
group_by(date) %>%
summarise(n = n()) %>%
summarise(Avg.DAU = mean(n), Avg.ratio = mean(n)/nrow(valid_user),
min.DAU = min(n), min.ratio = min(n)/nrow(valid_user),
max.DAU =max(n), max.ratio = max(n)/nrow(valid_user),
user = nrow(valid_user))
all_month_date
month_active_user %>%
filter(date %in% this_week_date) %>%
summarise(WAU = n_distinct(user_id), WAU_ration = n_distinct(user_id) / nrow(valid_user))
tw_date = c(20160621:20160626)
tw_full_sql = paste(sql, connect_query_table(tw_date), 'where structPayload.eventData.type == "click" or
structPayload.eventData.type == "swipe" or
structPayload.eventData.type == "touch" or
structPayload.eventData.type == "view"')
tw_rawtable = query_exec(tw_full_sql, project, max_pages = Inf)
names(tw_rawtable) = c('time', 'ngClick', 'page_url', 'href', 'event_type', 'user_id')
tw_event_table = tw_rawtable %>%
arrange(user_id, desc(time))
lw_date = c(20160607:20160613)
lw_full_sql = paste(sql, connect_query_table(lw_date), 'where structPayload.eventData.type == "click" or
structPayload.eventData.type == "swipe" or
structPayload.eventData.type == "touch" or
structPayload.eventData.type == "view"')
lw_rawtable = query_exec(lw_full_sql, project, max_pages = Inf)
names(lw_rawtable) = c('time', 'ngClick', 'page_url', 'href', 'event_type', 'user_id')
lw_event_table = lw_rawtable %>%
arrange(user_id, desc(time))
all_month_date = c(20160527:20160531, 20160601:20160613, 20160621:20160626)
all_month_date
month_sql = 'select metadata.timestamp, structPayload.userId, from '
all_month_full_sql = paste(month_sql, connect_query_table(all_month_date))
all_month_rawtable = query_exec(all_month_full_sql, project, max_pages = Inf)
